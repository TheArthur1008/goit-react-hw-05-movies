{"version":3,"file":"static/js/415.2e2ac0da.chunk.js","mappings":"6SAKMA,EAAWC,EAAAA,GAAAA,OAAa,CAAEC,QAAS,kCAC5BC,EAAW,mCAAG,oGACFH,EAASI,IALZ,qBAK+B,CACjDC,OAAQ,CAAEC,QAAS,sCAFI,cACnBC,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAASI,IAAT,WAXP,gBAWqC,CACnDC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAASI,IAAT,iBAAuBU,GAAM,CAClDT,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAiB,mCAAG,WAAMD,GAAN,uFACRd,EAASI,IAAT,iBAAuBU,EAAvB,YAAqC,CAC1DT,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXd,EAASI,IAAT,iBAAuBU,EAAvB,YAAqC,CAC1DT,OAAQ,CACNC,QAAS,sCAHqB,cAC5BC,EAD4B,yBAM3BA,EAASC,MANkB,2CAAH,qD,4ECxCpBS,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnC,OACE,wBACGD,GACCA,EAAOE,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaT,GAAMU,MAAO,CAAEL,KAAMA,GAA1C,SACGE,GAAQC,KAFJR,EADA,KASlB,C,sFCgBD,UAzBa,WACX,OAA0CW,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,MACG4B,MAAK,SAAAxB,GACJoB,EAAiBpB,EAClB,IACAyB,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAQC,IAAIF,EACb,GACJ,GAAE,IAEEP,GAKH,0BACE,SAAC,IAAD,CAAYR,OAAQQ,EAAeP,KAAMS,EAASQ,cAL7C,wCAQV,C","sources":["Api/Api.js","components/Movies/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst trandingMovie = 'trending/movie/day';\nconst nameMovie = 'search/movie';\n\nconst movieApi = axios.create({ baseURL: 'https://api.themoviedb.org/3/' });\nexport const moviesFetch = async () => {\n  const response = await movieApi.get(trandingMovie, {\n    params: { api_key: 'f9515d5c748130764d8b19c2d2137bc3' },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get(`/${nameMovie}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'f9515d5c748130764d8b19c2d2137bc3',\n    },\n  });\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nexport const MoviesList = ({ movies, from }) => {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, name, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: from }}>\n              {name || title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n","import { moviesFetch } from 'Api/Api';\nimport { MoviesList } from 'components/Movies/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    moviesFetch()\n      .then(response => {\n        setTrendingFilms(response);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, []);\n\n  if (!trendingFilms) {\n    return <p>404 Not Found</p>;\n  }\n\n  return (\n    <div>\n      <MoviesList movies={trendingFilms} from={location.pathname} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["movieApi","axios","baseURL","moviesFetch","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","searchMovieByCast","searchMovieByReviews","MoviesList","movies","from","map","name","title","to","state","useState","trendingFilms","setTrendingFilms","location","useLocation","useEffect","then","catch","message","console","log","pathname"],"sourceRoot":""}